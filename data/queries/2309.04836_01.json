{
  "paper": "2309.04836.txt",
  "words": 12151,
  "extractions": {
    "description": "This paper presents a technique for computing a map between two genus-zero shapes, matching semantically corresponding regions. It leverages pre-trained vision models and neural surface maps for this task without requiring annotated 3D training data.",
    "title": {
      "value": "Neural Semantic Surface Maps",
      "justification": "It is the original title of the given paper from arXiv:2309.04836v3.",
      "quote": "Neural Semantic Surface Maps"
    },
    "type": {
      "value": "Empirical",
      "justification": "The paper involves experiments and evaluations of the proposed method on various datasets and includes quantitative and qualitative results.",
      "quote": "Through quantitative and qualitative experiments, we evaluate our ability to match upright object pairs with varying levels of isometry for objects from the same semantic class and across different ones."
    },
    "research_field": {
      "value": "Computer Vision",
      "justification": "The paper focuses on applying computer vision techniques for shape analysis and matching.",
      "quote": "• Computing methodologies → Shape analysis; Mesh geometry models; Feature selection;"
    },
    "sub_research_field": {
      "value": "Shape Matching",
      "justification": "The main focus of the paper is on computing correspondences between 3D shapes, which falls under the category of shape matching.",
      "quote": "In this work, we propose an automatic method to compute a continuous correspondence between two genus-zero surfaces, represented as meshes."
    },
    "models": [
      {
        "name": {
          "value": "Neural Surface Maps (NSM)",
          "justification": "The paper leverages and extends NSM for optimizing seamless maps between shapes.",
          "quote": "Specifically, given the fuzzy matches, we utilize Neural Surface Maps (NSM) to optimize a map between two surfaces."
        },
        "role": "used",
        "type": {
          "value": "Neural Network-based Model",
          "justification": "NSM involves the use of neural networks to encode and map surfaces.",
          "quote": "We follow NSM’s paradigm: we first parameterize each one of the two cut surfaces via SLIM into a square D ∈ R2 to get two bijective seamless parameterizations, PA : A ↔ D, PB : B ↔ D. Then, we fit a neural network to each of the two parameterizations’ inverse, fA ≈ PA−1 , fB ≈ PB−1."
        },
        "mode": "inference"
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "FAUST",
          "justification": "FAUST dataset is mentioned as being used for evaluating the method.",
          "quote": "We randomly select 30 pairs from FAUST, containing isometric deformations and pose variations of human shapes."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "SHREC07",
          "justification": "SHREC07 dataset is mentioned as being used for evaluating the method.",
          "quote": "We choose 30 random same-category shape pairs from SHREC07, containing non-isometric deformations across multiple categories of shapes."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "SHREC19",
          "justification": "SHREC19 dataset is mentioned as being used for evaluating the method.",
          "quote": "We also extract 30 random shape pairs among the listed test set of SHREC19 from Dyke et al."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "SCAPE",
          "justification": "SCAPE dataset is mentioned as being used for evaluation in pose variation scenarios.",
          "quote": "We use FAUST, SCAPE, and TOSCA to ablate the effect of pose variation."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "TOSCA",
          "justification": "TOSCA dataset is mentioned as being used for evaluation in pose variation scenarios.",
          "quote": "We use FAUST, SCAPE, and TOSCA to ablate the effect of pose variation."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "3DBiCar",
          "justification": "3DBiCar dataset is mentioned as being used for evaluating the method with various textured shapes.",
          "quote": "We use FAUST, SHREC15, 3DBiCar, which comprise a variety of textured shapes."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "SHREC15",
          "justification": "SHREC15 dataset is mentioned as being used for evaluating the method with significant non-isometric-variations.",
          "quote": "We use FAUST, SHREC15, 3DBiCar, which contain significant non-isometric-variations."
        },
        "role": "used"
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch",
          "justification": "The paper mentions using PyTorch's SGD optimizer for network optimization.",
          "quote": "The resultant optimization problem is solved using gradient descent, simply through PyTorch’s SGD optimizer."
        },
        "role": "used"
      }
    ]
  },
  "usage": {
    "completion_tokens": 908,
    "prompt_tokens": 20395,
    "total_tokens": 21303
  }
}