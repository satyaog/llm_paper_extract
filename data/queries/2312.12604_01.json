{
  "paper": "2312.12604.txt",
  "words": 39754,
  "extractions": {
    "description": "The paper conducts a comprehensive empirical study on the practices of testing machine learning (ML) software in real-world settings. The study analyzes various ML testing strategies, properties, and methods used throughout the ML workflow by examining test files and strategies across multiple open-source ML software systems.",
    "title": {
      "value": "Studying the Practices of Testing Machine Learning Software in the Wild",
      "justification": "The title is provided in the document and matches the study's focus on analyzing real-world ML testing practices.",
      "quote": "Studying the Practices of Testing Machine Learning Software in the Wild"
    },
    "type": {
      "value": "Empirical Study",
      "justification": "The study systematically examines and collects empirical evidence from real-world ML software system testing practices.",
      "quote": "To fill this gap, we perform the first fine-grained empirical study on ML testing practices in the wild."
    },
    "research_field": {
      "value": "Machine Learning (ML)",
      "justification": "The paper centers around evaluating machine learning software testing practices, which is a subset of Artificial Intelligence.",
      "quote": "The increasing adoption of Machine Learning (ML) and Deep Learning (DL) in many software systems, including safety-critical software systems..."
    },
    "sub_research_field": {
      "value": "Software Testing",
      "justification": "The study explicitly focuses on testing methods, practices, and strategies in the realm of machine learning software.",
      "quote": "Through this study, we hope to shed some light on the level of adoption in practice of the software testing techniques, and highlight the gaps and limitations of existing ML testing practices."
    },
    "models": [
      {
        "name": {
          "value": "LightFM",
          "justification": "LightFM is presented as one of the studied ML software systems.",
          "quote": "We manually analyzed the test code contents of 11 ML software systems from...Recommendation systems (e.g., LightFM)..."
        },
        "role": "used",
        "type": {
          "value": "Recommendation System",
          "justification": "LightFM is a known recommendation system that integrates various algorithms for user-item recommendation.",
          "quote": "LightFM is a recommendation system based in Python, developed by Lyst."
        },
        "mode": "inference"
      },
      {
        "name": {
          "value": "HTM (Hierarchical Temporal Memory)",
          "justification": "HTM is included as one of the ML models in the surveyed systems.",
          "quote": "Numenta Platform for Intelligent Computing is an implementation of Hierarchical Temporal Memory (HTM), a theory of intelligence based strictly on the neuroscience of the neocortex."
        },
        "role": "used",
        "type": {
          "value": "Neural Network Theory",
          "justification": "HTM is based on the neuroscience of the neocortex and is used in biological and machine intelligence applications.",
          "quote": "HTM, a theory of intelligence based strictly on the neuroscience of the neocortex."
        },
        "mode": "inference"
      },
      {
        "name": {
          "value": "NanoDet",
          "justification": "NanoDet is discussed as one of the systems used in their study.",
          "quote": "NanoDet...An object detection model on mobile devices."
        },
        "role": "used",
        "type": {
          "value": "Object Detection",
          "justification": "NanoDet is an object detection model tailored for mobile devices.",
          "quote": "NanoDet...It uses the Generalized Focal Loss for regression and classification loss."
        },
        "mode": "inference"
      },
      {
        "name": {
          "value": "DeepSpeech",
          "justification": "DeepSpeech is included as one of the systems in the study.",
          "quote": "An embedded (offline, on-device) open source speech recognition engine which can run in real time on devices ranging from a Raspberry Pi 4 to high power GPU servers. At its core, DeepSpeech uses a trained recurrent neural network (RNN) consisting of 5 layers of hidden units to ingest speech spectrograms and generate English text transcriptions."
        },
        "role": "used",
        "type": {
          "value": "Speech Recognition",
          "justification": "DeepSpeech is known for its speech recognition capabilities using RNNs.",
          "quote": "DeepSpeech uses a trained recurrent neural network (RNN) consisting of 5 layers of hidden units to ingest speech spectrograms and generate English text transcriptions."
        },
        "mode": "inference"
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "KenLM",
          "justification": "KenLM is used as a dataset for language modeling in the DeepSpeech system.",
          "quote": "DeepSpeech an NLP system make use of the KenLM Language Model Toolkit in performing many of its tasks and subsequently test cases for its compatibility was observed when performing tasks such as selecting macros, model inference, data processing and generation when dealing with big datasets."
        },
        "role": "used"
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "NumPy",
          "justification": "NumPy is commonly used in the analysis and manipulation of data, which is integral to ML workflows discussed in the paper.",
          "quote": "Also, for situations where the test functions/methods are independent of each other (no class defined), e.g., manual testing or integration testing, such as in [8], each test function is defined as a separate test case. C/C++ supports multiple unit testing frameworks. The most popular testing frameworks are Google C++ (gTest) [52] and Boost.Test (Boost) [47]. Other features...assertions provided by NumPy..."
        },
        "role": "referenced"
      },
      {
        "name": {
          "value": "pytest",
          "justification": "pytest is cited as a testing framework used for writing and running tests in ML software.",
          "quote": "The most popular unit testing frameworks for C++ are Boost.Test (Boost) and Google C++ (gTest). In Python, assertions are expressed in two ways: 1) assert keyword, which is then followed by a Boolean expression; and 2) using customized assertion APIs, e.g., internally defined by each Python system, the Python unittest built-in functions, and assertion APIs provided by NumPy, i.e., a commonly used library in Python that supports computations on arrays and matrices. The most popular unit"
        },
        "role": "used"
      }
    ]
  },
  "usage": {
    "completion_tokens": 1249,
    "prompt_tokens": 61698,
    "total_tokens": 62947
  }
}
