{
  "paper": "2311.18012.txt",
  "words": 7143,
  "extractions": {
    "description": "This paper presents a Bayesian imaging approach for radio interferometry using score-based generative models. The methodology is applied to recover images of protoplanetary disks from the DSHARP survey using high-resolution optical images of galaxies as priors.",
    "title": {
      "value": "Bayesian Imaging for Radio Interferometry with Score-Based Priors",
      "justification": "It is the title of the paper.",
      "quote": "Bayesian Imaging for Radio Interferometry with Score-Based Priors"
    },
    "type": {
      "value": "empirical study",
      "justification": "The paper involves applying a proposed method to actual ALMA observation data and comparing the results with other imaging methods.",
      "quote": "We test our pipeline on ALMA observations of 3 DSHARP protoplanetary disks [17] as a first application of this method to radio interferometry data."
    },
    "research_field": {
      "value": "Deep Learning",
      "justification": "The research involves the usage of deep learning methods, specifically score-based generative models, for Bayesian inference.",
      "quote": "In this work, we use score-based generative models [14, 15] as principled priors [16] to perform Bayesian inference for radio interferometric imaging."
    },
    "sub_research_field": {
      "value": "Generative Models",
      "justification": "The paper utilizes score-based generative models for the task of Bayesian imaging.",
      "quote": "In this work, we use score-based generative models [14, 15] as principled priors [16] to perform Bayesian inference for radio interferometric imaging."
    },
    "models": [
      {
        "name": {
          "value": "U-net",
          "justification": "The score-based model they use for denoising score matching is based on the U-net architecture.",
          "quote": "we train a neural network based on the U-net architecture [25] with a weighted Fisher divergence loss [26]"
        },
        "role": "used",
        "type": {
          "value": "Denoising Score Network",
          "justification": "The U-net is implemented as a denoising score network for denoising score matching.",
          "quote": "we train a neural network based on the U-net architecture [25] with a weighted Fisher divergence loss [26] to match a Gaussian perturbation kernel"
        },
        "mode": "training"
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "DSHARP survey",
          "justification": "This dataset is specifically mentioned as the subject of the paper's experiments.",
          "quote": "Disk Substructures at High Angular Resolution Project (DSHARP) [17] is a recent survey aiming to characterize the substructures of 20 nearby protoplanetary disks by observing their continuum emission around 240 GHz with ALMA."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "PROBES dataset",
          "justification": "This dataset of high-quality local late-type galaxies is used as a prior for the reconstructions.",
          "quote": "The PROBES dataset is a compendium of high-quality local late-type galaxies [33, 34] that we leverage as a prior for our reconstructions."
        },
        "role": "used"
      },
      {
        "name": {
          "value": "SKIRT dataset",
          "justification": "This dataset is used to compare prior distributions based on galaxies in the experiments.",
          "quote": "The SKIRT TNG [36] dataset is a large public collection of images spanning 0.3-5 microns made by applying dust radiative transfer post-processing [37] to galaxies from the TNG cosmological magneto-hydrodynamical simulations [38]."
        },
        "role": "used"
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch",
          "justification": "The framework is mentioned in the software section of the paper as part of the implementation.",
          "quote": "Software used: astropy [46, 47], jupyter [48], matplotlib [49] , numpy [50], PyTorch [51], tqdm [52], CASA [53], mpol [9], visread [54]"
        },
        "role": "used"
      }
    ]
  },
  "usage": {
    "completion_tokens": 776,
    "prompt_tokens": 14263,
    "total_tokens": 15039
  }
}